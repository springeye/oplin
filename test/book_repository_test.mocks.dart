// Mocks generated by Mockito 5.2.0 from annotations
// in oplin/test/book_repository_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:oplin/db/models.dart' as _i3;
import 'package:oplin/repository/book_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [BookRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookRepository extends _i1.Mock implements _i2.BookRepository {
  MockBookRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Book> getBooks() =>
      (super.noSuchMethod(Invocation.method(#getBooks, []),
          returnValue: <_i3.Book>[]) as List<_i3.Book>);
  @override
  _i3.Book? findBook(String? uuid) =>
      (super.noSuchMethod(Invocation.method(#findBook, [uuid])) as _i3.Book?);
  @override
  void saveBook(_i3.Book? book) =>
      super.noSuchMethod(Invocation.method(#saveBook, [book]),
          returnValueForMissingStub: null);
  @override
  void batchSaveBook(List<_i3.Book>? books) =>
      super.noSuchMethod(Invocation.method(#batchSaveBook, [books]),
          returnValueForMissingStub: null);
  @override
  void deleteBook(String? uuid, {bool? physics = false}) => super.noSuchMethod(
      Invocation.method(#deleteBook, [uuid], {#physics: physics}),
      returnValueForMissingStub: null);
  @override
  void batchDeleteBook(List<String>? uuid, {bool? physics = false}) =>
      super.noSuchMethod(
          Invocation.method(#batchDeleteBook, [uuid], {#physics: physics}),
          returnValueForMissingStub: null);
}
